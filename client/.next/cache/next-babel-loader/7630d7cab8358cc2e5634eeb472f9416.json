{"ast":null,"code":"var _jsxFileName = \"/Users/mygo/Workspace/microService/ticketingTS/client/pages/auth/signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport useRequest from '../../hooks/use-request';\nimport styled from 'styled-components';\nimport { i18n, Link, withTranslation } from '../../utils/i18n';\nimport Outside from '../../assets/outside.svg';\nimport CustomButton from '../../components/custom-button/custom-button.component.jsx';\nconst IconContainer = styled.div`\n  width: 200px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst ButtonContainer = styled.div`\n  width: 500px;\n  height: 200px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`; // const LangButton = ({t}) => (\n//   <div>\n//     <CustomButton children={t('pushButton')} />\n//   </div>\n// );\n\nconst SignUp = () => {\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: '/api/users/signup',\n    method: 'post',\n    body: {\n      email,\n      password\n    },\n    onSuccess: () => Router.push('/')\n  });\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await doRequest();\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Email Address\"), __jsx(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), errors, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), __jsx(IconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Outside, {\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(CustomButton, {\n    children: t('pushButton'),\n    onClick: () => i18n.changeLanguage(i18n.language === 'zh' ? 'en' : 'zh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }));\n};\n\nSignUp.getInitialProps = async () => ({\n  namespacesRequired: ['common']\n});\n\nexport default withTranslation('common')(SignUp);","map":{"version":3,"sources":["/Users/mygo/Workspace/microService/ticketingTS/client/pages/auth/signup.js"],"names":["useState","useEffect","Router","useRouter","useRequest","styled","i18n","Link","withTranslation","Outside","CustomButton","IconContainer","div","ButtonContainer","SignUp","t","useTranslation","router","email","setEmail","password","setPassword","doRequest","errors","url","method","body","onSuccess","push","onSubmit","event","preventDefault","e","target","value","changeLanguage","language","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport useRequest from '../../hooks/use-request';\nimport styled from 'styled-components';\nimport { i18n, Link, withTranslation } from '../../utils/i18n';\n\nimport Outside from '../../assets/outside.svg';\nimport CustomButton from '../../components/custom-button/custom-button.component.jsx';\n\n\nconst IconContainer = styled.div`\n  width: 200px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ButtonContainer = styled.div`\n  width: 500px;\n  height: 200px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`\n\n// const LangButton = ({t}) => (\n//   <div>\n//     <CustomButton children={t('pushButton')} />\n//   </div>\n// );\n\n\n\nconst SignUp = () => {\n  const { t } = useTranslation();\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { doRequest, errors } = useRequest({\n    url: '/api/users/signup',\n    method: 'post',\n    body: {\n      email,\n      password\n    },\n    onSuccess: () => Router.push('/')\n  });\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    await doRequest();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h1>Sign Up</h1>\n      <div className=\"form-group\">\n        <label>Email Address</label>\n        <input\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          type=\"password\"\n          className=\"form-control\"\n        />\n      </div>\n      {errors}\n      <button className=\"btn btn-primary\">Sign Up</button>\n      <IconContainer>\n        <Outside color='green'/>\n      </IconContainer>\n      \n        <CustomButton \n          children={t('pushButton')} \n          onClick={() => i18n.changeLanguage(i18n.language === 'zh' ? 'en' : 'zh')}\n        />\n      \n    </form>\n  );\n};\n\n\nSignUp.getInitialProps = async () => ({\n  namespacesRequired: ['common'],\n})\n\n\n\nexport default withTranslation('common')(SignUp);\n"]},"metadata":{},"sourceType":"module"}